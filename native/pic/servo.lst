gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;       STOP: sudo pk2cmd -P -R
               00002 ;       START/INSTALL: sudo pk2cmd -P PIC12f629 -M -F servo.hex -Y -T
               00003 ;       COMPILE: gpasm -dos -w1 servo.asm -o servo.hex; cat servo.lst | grep Error
               00004 ;       SIMULATE: gpsim -p12f629 -s servo.cod servo.hex
               00005 ;
               00006 ; interrupt:    INTCON 0-5
               00007 ; akademiker-akassa:    OCR: 5735651261577066398 BANK: 5862-8082 SUMMA: 540
               00008 ; -""-                                  OCR: 5735651261577066299 SUMMA: 90
               00009 ;*************************************************************************************************************
               00010         #include    <12f629.inc>
               00002      LIST
               00003         LIST p = 12F629, r = dec, w = -302
               00004         INCLUDE "P12F629.INC"   ; MPASM  Header
Warning [231] : found lower case match for include filename
               00001         LIST
               00002 ; P12F629.INC  Standard Header File, Version 1.04    Microchip Technology, Inc.
               00258         LIST
               00005         ;__config _INTRC_OSC_NOCLKOUT & _WDT_ON & _MCLRE_OFF & _CP_OFF
               00007         LIST
002007 3FC2    00011         __config (_HS_OSC & _WDT_OFF & _PWRTE_ON & _MCLRE_OFF & _CP_OFF )
               00012 ;_HS_OSC
               00013 ;_INTRC_OSC_NOCLKOUT
               00014 ;***** VARIABLE DEFINITIONS
               00015 
0000 00016 #DEFINE         _servo0Port             0x0                     ; Servo 1 port
0000 00017 #DEFINE         _servo1Port             0x1                     ; Servo 2 port
0000 00018 #DEFINE         _servo2Port             0x2                     ; Servo 3 port
0000 00019 #DEFINE         _servo3Port             0x4                     ; Servo 4 port
               00020 
               00021 
0000 00022 #DEFINE         _portData       0x3                             ; The data input port
               00023 
               00024 cblock 0x20             ; Start of memory block
               00025         dc1                     ; delay counter inner loop
               00026         dc2                     ; delay counter outer loop
               00027         servo0I         ; The current rotation (interval) for servo0
               00028         servo1I         ; The current rotation (interval) for servo1
               00029         servo2I         ; The current rotation (interval) for servo2
               00030         servo3I         ; The current rotation (interval) for servo3
               00031 
               00032         servoSelect ; [0] = 1 if servo0 has signal
               00033                                 ; [1] = 1 if servo1 has signal
               00034                                 ; [2] = 1 if servo2 has signal
               00035                                 ; [3] = 1 if servo3 has signal
               00036 
               00037         sPauseI         ; Servo pause timer (used before PAUSE) equals a delay for sPauseI / 100ms
               00038         portOutTmp      ; containting the currently used servo port
               00039         tmp
               00040 
               00041 ;************************************************************
               00042 ;       Signals:
               00043 ;       A signal is allways 10 bit, where the 2 first represents
               00044 ;       The servo to use and the remainding 8 represents the value 
               00045 ;       to be transfered to the servo.
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00046 ;**************************************************************
               00047         portCounter     ; Bit counter for serialized data
               00048         portData        ; will be populated with incoming data
               00049         portSelect      ; will contain the servo selection
               00050 
               00051 endc
               00052 
0000           00053     org 0x0
               00054 
0000 00055 INIT:
0000 0103      00056         clrw
0001 1683      00057         bsf     STATUS,RP0       ; select Register Page 1
0002 3000      00058         movlw   b'0'
0003 00A6      00059         movwf   servoSelect
0004 00A2      00060         movwf   servo0I
0005 00A3      00061         movwf   servo1I
0006 00A4      00062         movwf   servo2I
0007 00A5      00063         movwf   servo3I
0008 0085      00064         movwf   TRISIO                   ; set the port configuration   
0009 1585      00065         bsf             TRISIO,_portData        ;set the input port
000A 1283      00066         bcf     STATUS,RP0       ; back to Register Page 0
               00067 
               00068 ;************* Configuration: ******************'
               00069 
000B 00070 MAIN:
000B 1005      00071         bcf             GPIO,_servo0Port
000C 1085      00072         bcf             GPIO,_servo1Port
000D 1105      00073         bcf             GPIO,_servo2Port
000E 1205      00074         bcf             GPIO,_servo3Port
000F 2050      00075         call CHECK_FOR_SIGNAL   
               00076 
0010 1C26      00077         btfss   servoSelect,_servo0Port ; if not addressing servo0
0011 20A2      00078         call PAUSE_2MS
0012 1CA6      00079         btfss   servoSelect,_servo1Port ; if not addressing servo1
0013 20A2      00080         call PAUSE_2MS
0014 1D26      00081         btfss   servoSelect,_servo2Port ; if not addressing servo2
0015 20A2      00082         call PAUSE_2MS
0016 1E26      00083         btfss   servoSelect,_servo3Port ; if not addressing servo3
0017 20A2      00084         call PAUSE_2MS
               00085 
0018 1826      00086         btfsc   servoSelect,_servo0Port ;chick if servo0 was selected
0019 2021      00087         call    SET_SERVO0
001A 18A6      00088         btfsc   servoSelect,_servo1Port ;chick if servo1 was selected
001B 2027      00089         CALL    SET_SERVO1
001C 1926      00090         btfsc   servoSelect,_servo2Port ;chick if servo1 was selected
001D 202D      00091         CALL    SET_SERVO2
001E 1A26      00092         btfsc   servoSelect,_servo3Port ;chick if servo1 was selected
001F 2033      00093         CALL    SET_SERVO3
               00094 
0020 280B      00095         goto MAIN
               00096 
               00097 
               00098 ;***********************  
               00099 ;       SET_SERVO methods
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00100 ;       sends signal to servo1
               00101 ;***********************
0021 00102 SET_SERVO0:
0021 3000      00103         movlw   0x0
0022 00A8      00104         movwf   portOutTmp
0023 1428      00105         bsf             portOutTmp,_servo0Port
0024 0822      00106         movfw   servo0I
0025 2039      00107         call    SET_SERVO
0026 0008      00108         return
               00109 
0027 00110 SET_SERVO1:
0027 3000      00111         movlw   0x0
0028 00A8      00112         movwf   portOutTmp
0029 14A8      00113         bsf             portOutTmp,_servo1Port
002A 0823      00114         movfw   servo1I
002B 2039      00115         call    SET_SERVO
002C 0008      00116         return
               00117 
002D 00118 SET_SERVO2:
002D 3000      00119         movlw   0x0
002E 00A8      00120         movwf   portOutTmp
002F 1528      00121         bsf             portOutTmp,_servo2Port
0030 0824      00122         movfw   servo2I
0031 2039      00123         call    SET_SERVO
0032 0008      00124         return
               00125 
0033 00126 SET_SERVO3:
0033 3000      00127         movlw   0x0
0034 00A8      00128         movwf   portOutTmp
0035 1628      00129         bsf             portOutTmp,_servo3Port
0036 0825      00130         movfw   servo3I
0037 2039      00131         call    SET_SERVO
0038 0008      00132         return
               00133 
               00134 
               00135 
0039 00136 SET_SERVO:
0039 00A7      00137         movwf   sPauseI
003A 0828      00138         movfw   portOutTmp                      ; use portOutTmp to select port
003B 0085      00139         movwf   GPIO                            ; turn the selected port on
003C 2040      00140         call    PAUSE                           ; pause for sPauseI time
003D 3000      00141         movlw   0x0                                     
003E 0085      00142         movwf   GPIO                            ; turn port off again
003F 0008      00143         return
               00144 
               00145 ;***********************  
               00146 ;       PAUSE
               00147 ;       Pause for 850 us + sPauseI * 7 us
               00148 ;***********************
               00149 
0040 00150 PAUSE:
0040 20B7      00151         call PAUSE_50US
0041 20B2      00152         call PAUSE_200US
0042 20B2      00153         call PAUSE_200US
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0043 0827      00154         movfw   sPauseI                 ; 1             Set dc2 to pauceT (the number of 100'ths of milliseconds to delay)
0044 00A1      00155         movwf   dc2                             ; 1             
0045 00156 PAUSE_LOOP:
0045 0000      00157         nop                                             ; 1
0046 0000      00158         nop                                             ; 1
0047 0000      00159         nop                                             ; 1
0048 0000      00160         nop                                             ; 1 
0049 0000      00161         nop                                             ; 1
004A 0000      00162         nop                                             ; 1  
004B 0000      00163         nop                                             ; 1
004C 0000      00164         nop                                             ; 1  
004D 0BA1      00165         decfsz  dc2,1                   ; 1 (2) counter for inner loop
004E 2845      00166         goto PAUSE_LOOP                 ; 2
004F 0008      00167         return                                  ; 2             return from subroutine if dc2 == 0
               00168 
               00169 
               00170 ;*****************************************************************************************************************************************************************
               00171 ;       
               00172 ;                       DATA TRANSFER METHODS:
               00173 ;
               00174 ;*****************************************************************************************************************************************************************
               00175 
               00176 
               00177 
               00178 ;***********************  
               00179 ;       CHECK_FOR_SIGNAL
               00180 ;       Check if data is being transfered. The first signal is allways a "wake up" signal
               00181 ;***********************
0050 00182 CHECK_FOR_SIGNAL:
0050 1985      00183         btfsc   GPIO, _portData
               00184 ;       bsf     GPIO, _servo0Port
0051 2053      00185         call    START_TRANSFER
0052 0008      00186         return
               00187 
               00188 ;***********************  
               00189 ;       SIGNAL_RECEIVED
               00190 ;       Handles incoming dataSignal
               00191 ;***********************
0053 00192 START_TRANSFER:
               00193 
0053 01AA      00194         clrf    portCounter             ;clear the portCounter
0054 01AB      00195         clrf    portData
0055 01AC      00196         clrf    portSelect
               00197 
0056 00198 TRANSFER_INIT_LOOP:
0056 1985      00199         btfsc   GPIO, _portData                 ; if port data is still set
0057 2856      00200         goto    TRANSFER_INIT_LOOP              ; wait
0058 20B7      00201         call    PAUSE_50US                              ; pause to get "out of sync"
0059 205C      00202         call    SERVO_SELECT_TRANSFER
005A 206B      00203         call    DATA_TRANSFER
               00204 
005B 0008      00205         return
               00206 
               00207 ;***********************  
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00208 ;       SERVO_SELECT_TRANSFER
               00209 ;       Initialize serialized data transfer to select servo
               00210 ;***********************
005C 00211 SERVO_SELECT_TRANSFER:
005C 3000      00212         movlw   b'0'
005D 00AC      00213         movwf   portSelect
005E 1985      00214         btfsc   GPIO,_portData  ; if signal is received
005F 142C      00215         bsf             portSelect,_servo0Port  ; set the port for servo 0 
0060 20C3      00216         call TRANSFER_DELAY             ; wait for next signal
               00217 
0061 1985      00218         btfsc   GPIO,_portData  ; if signal is received
0062 14AC      00219         bsf             portSelect,_servo1Port  ; set the port for servo 1
0063 20C3      00220         call TRANSFER_DELAY             ; wait for next signal
               00221 
0064 1985      00222         btfsc   GPIO,_portData  ; if signal is received
0065 152C      00223         bsf             portSelect,_servo2Port  ; set the port for servo 2 
0066 20C3      00224         call TRANSFER_DELAY             ; wait for next signal
               00225 
0067 1985      00226         btfsc   GPIO,_portData  ; if signal is received
0068 162C      00227         bsf             portSelect,_servo3Port  ; set the port for servo 3
0069 20C3      00228         call TRANSFER_DELAY             ; wait for next signal
006A 0008      00229         return
               00230 
               00231 ;***********************  
               00232 ;       DATA_TRANSFER
               00233 ;       Initialize serialized data transfer containing interval
               00234 ;***********************
006B 00235 DATA_TRANSFER:
006B 3000      00236         movlw   b'0'
006C 00AA      00237         movwf   portCounter
006D 00AB      00238         movwf   portData
006E 142A      00239         bsf             portCounter,0x0 ;init the dataCounter to the first bit
006F 00240 DATA_TRANSFER_LOOP:
006F 082A      00241         movf    portCounter,w   ;move counter to w
0070 1985      00242         btfsc   GPIO,_portData  ;if signal is received
0071 04AB      00243         iorwf   portData,1              ;OR the portCounter to portData
0072 1003      00244         bcf             STATUS,0                ;clear the carry-bit
0073 0DAA      00245         rlf             portCounter,1           ;rotate portCounter left
               00246         
0074 1803      00247         btfsc   STATUS,0x0                      ; if carry is set: finish transfer (full rotation)
0075 2878      00248         goto    DATA_TRANSFER_FINISHED
0076 20C3      00249         call    TRANSFER_DELAY                  ; wait for next signal
0077 286F      00250         goto    DATA_TRANSFER_LOOP                      ; fetch next bit        
0078 00251 DATA_TRANSFER_FINISHED:
0078 082B      00252         movfw   portData
0079 182C      00253         btfsc   portSelect,_servo0Port  ;chick if servo0 was selected
007A 00A2      00254         movwf   servo0I                                 ;copy to servo
007B 18AC      00255         btfsc   portSelect,_servo1Port  ;chick if servo1 was selected
007C 00A3      00256         movwf   servo1I                                 ;copy to servo
007D 192C      00257         btfsc   portSelect,_servo2Port  ;chick if servo1 was selected
007E 00A4      00258         movwf   servo2I                                 ;copy to servo
007F 1A2C      00259         btfsc   portSelect,_servo3Port  ;chick if servo1 was selected
0080 00A5      00260         movwf   servo3I                                 ;copy to servo
0081 082C      00261         movfw   portSelect
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0082 04A6      00262         iorwf   servoSelect,1                   ;merge the portSelect and the servoSelect settings
0083 0008      00263         return
               00264 
0084 00265 TMPTEST:
0084 0827      00266         movfw   sPauseI
0085 00AB      00267         movwf   portData
0086 00268 TRANSFER_DATA:
0086 082B      00269         movfw   portData
0087 00A9      00270         movwf   tmp                             ; move portData to a temporary file
0088 3001      00271         movlw   b'00000001'
0089 00AA      00272         movwf   portCounter             ; make sure the counter is 1
008A 00273 TL_DATA:
008A 1003      00274         bcf             STATUS,0                ; clear the carry-bit
008B 0DA9      00275         rlf             tmp                             ; rotate right
008C 1803      00276         btfsc   STATUS,0x0              ; if carry is set (last rotation was 1)
008D 20C6      00277         call    TURN_PORT_ON    ; send signal
008E 20BD      00278         call    PAUSE_45US              ; use a slighly shorter delay...
008F 20BD      00279         call    PAUSE_45US              ; ... in order to compensate for the size of this method
0090 20C9      00280         call    TURN_PORT_OFF
0091 1003      00281         bcf             STATUS,0                ; clear the carry-bit
0092 0DAA      00282         rlf             portCounter,1   ; rotate portCounter left
0093 1803      00283         btfsc   STATUS,0x0              ; if carry is set: finish transfer (full rotation)
0094 2896      00284         goto    TRANSFER_DONE
0095 288A      00285         goto    TL_DATA
0096 00286 TRANSFER_DONE:
0096 2886      00287         goto TRANSFER_DATA      ;tmp
Warning [203] : Found opcode in column 1.
0097 0008      00288 return
               00289 
               00290 ;***********************  
               00291 ;       PAUSE SIGNALS
               00292 ;       Pauses for the time required to receive a new signal
               00293 ;       Optimized for a 4 MHz HC49 low profile crystal and 
               00294 ;       2 x 22 pF ceramic capacitors
               00295 ;***********************
               00296 
               00297 ;***********************  
               00298 ;       PAUSE_5MS
               00299 ;       Pauses for 5 milliseconds. 
               00300 ;***********************
0098 00301 PAUSE_5MS:
0098 3005      00302         movlw   d'5'
0099 00A1      00303         movwf   dc2
009A 00304 PAUSE_OUTER_LOOP:
009A 30FA      00305         movlw   d'250'
009B 00A0      00306         movwf   dc1
009C 00307 PAUSE_1MS_INNER_LOOP1:                  ;pauses for ~ 1 ms
009C 0000      00308         nop
009D 0BA0      00309         decfsz  dc1,1
009E 289C      00310         goto PAUSE_1MS_INNER_LOOP1
009F 0BA1      00311         decfsz  dc2,1
00A0 289A      00312         goto PAUSE_OUTER_LOOP
00A1 0008      00313         return
               00314 
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00315 ;***********************  
               00316 ;       PAUSE_2MS
               00317 ;       Pauses for 2 milliseconds. 
               00318 ;***********************
00A2 00319 PAUSE_2MS:
00A2 3002      00320         movlw   d'2'
00A3 00A1      00321         movwf   dc2
00A4 00322 PAUSE_OUTER_LOOP_2MS:
00A4 30FA      00323         movlw   d'250'
00A5 00A0      00324         movwf   dc1
00A6 00325 PAUSE_1MS_INNER_LOOP1_FOR_2MS:                  ;pauses for ~ 1 ms
00A6 0000      00326         nop
00A7 0BA0      00327         decfsz  dc1,1
00A8 28A6      00328         goto PAUSE_1MS_INNER_LOOP1_FOR_2MS
00A9 0BA1      00329         decfsz  dc2,1
00AA 28A4      00330         goto PAUSE_OUTER_LOOP_2MS
00AB 0008      00331         return
               00332 
00AC 00333 PAUSE_850US:
00AC 20B2      00334         call PAUSE_200US        
00AD 20B2      00335         call PAUSE_200US
00AE 20B2      00336         call PAUSE_200US
00AF 20B2      00337         call PAUSE_200US
00B0 20B7      00338         call PAUSE_50US
00B1 0008      00339         return;
               00340 
00B2 00341 PAUSE_200US:
00B2 20B7      00342         call PAUSE_50US
00B3 20B7      00343         call PAUSE_50US
00B4 20B7      00344         call PAUSE_50US
00B5 20B7      00345         call PAUSE_50US
00B6 0008      00346         return
               00347 
00B7 00348 PAUSE_50US:
00B7 300A      00349         movlw   d'10'
00B8 00A0      00350         movwf   dc1
00B9 00351 PAUSE_50US_LOOP:
00B9 0000      00352         nop
00BA 0BA0      00353         decfsz  dc1,1
00BB 28B9      00354         goto PAUSE_50US_LOOP
00BC 0008      00355         return
               00356 
00BD 00357 PAUSE_45US:
00BD 3009      00358         movlw   d'9'
00BE 00A0      00359         movwf   dc1
00BF 00360 PAUSE_45US_LOOP:
00BF 0000      00361         nop
00C0 0BA0      00362         decfsz  dc1,1
00C1 28BF      00363         goto PAUSE_45US_LOOP
00C2 0008      00364         return
               00365 
               00366 
00C3 00367 TRANSFER_DELAY:
               00368         ;call PAUSE_10MS
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C3 20B7      00369         call PAUSE_50US
00C4 20B7      00370         call PAUSE_50US
00C5 0008      00371         return
               00372 
               00373 ;****************************** PORT METHODS **************************
               00374 
00C6 00375 TURN_PORT_ON:
00C6 0828      00376         movfw   portOutTmp                      ; use portOutTmp to select port
00C7 0085      00377         movwf   GPIO                            ; turn the selected port on
Warning [203] : Found opcode in column 1.
00C8 0008      00378 return
               00379 
00C9 00380 TURN_PORT_OFF:
00C9 3000      00381         movlw   0x0
00CA 0085      00382         movwf   GPIO
Warning [203] : Found opcode in column 1.
00CB 0008      00383 return
               00384 
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

ADIE                              00000006
ADIF                              00000006
C                                 00000000
CAL0                              00000002
CAL1                              00000003
CAL2                              00000004
CAL3                              00000005
CAL4                              00000006
CAL5                              00000007
CHECK_FOR_SIGNAL                  00000050
CINV                              00000004
CIS                               00000003
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000019
CMIE                              00000003
CMIF                              00000003
COUT                              00000006
DATA_TRANSFER                     0000006B
DATA_TRANSFER_FINISHED            00000078
DATA_TRANSFER_LOOP                0000006F
DC                                00000001
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDAT                             0000009A
EEDATA                            0000009A
EEIE                              00000007
EEIF                              00000007
F                                 00000001
FSR                               00000004
GIE                               00000007
GP0                               00000000
GP1                               00000001
GP2                               00000002
GP3                               00000003
GP4                               00000004
GP5                               00000005
GPIE                              00000003
GPIF                              00000000
GPIO                              00000005
GPIO0                             00000000
GPIO1                             00000001
GPIO2                             00000002
GPIO3                             00000003
GPIO4                             00000004
GPIO5                             00000005
INDF                              00000000
INIT                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
INTF                              00000001
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IRP                               00000007
MAIN                              0000000B
NOT_BOD                           00000000
NOT_GPPU                          00000007
NOT_PD                            00000003
NOT_POR                           00000001
NOT_T1SYNC                        00000002
NOT_TO                            00000004
OPTION_REG                        00000081
OSCCAL                            00000090
PAUSE                             00000040
PAUSE_1MS_INNER_LOOP1             0000009C
PAUSE_1MS_INNER_LOOP1_FOR_2MS     000000A6
PAUSE_200US                       000000B2
PAUSE_2MS                         000000A2
PAUSE_45US                        000000BD
PAUSE_45US_LOOP                   000000BF
PAUSE_50US                        000000B7
PAUSE_50US_LOOP                   000000B9
PAUSE_5MS                         00000098
PAUSE_850US                       000000AC
PAUSE_LOOP                        00000045
PAUSE_OUTER_LOOP                  0000009A
PAUSE_OUTER_LOOP_2MS              000000A4
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
RD                                00000000
RP0                               00000005
RP1                               00000006
SERVO_SELECT_TRANSFER             0000005C
SET_SERVO                         00000039
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
SET_SERVO0                        00000021
SET_SERVO1                        00000027
SET_SERVO2                        0000002D
SET_SERVO3                        00000033
START_TRANSFER                    00000053
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
TL_DATA                           0000008A
TMPTEST                           00000084
TMR0                              00000001
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TRANSFER_DATA                     00000086
TRANSFER_DELAY                    000000C3
TRANSFER_DONE                     00000096
TRANSFER_INIT_LOOP                00000056
TRISIO                            00000085
TURN_PORT_OFF                     000000C9
TURN_PORT_ON                      000000C6
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000099
VREN                              00000007
VRR                               00000005
W                                 00000000
WPU                               00000095
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_EC_OSC                           00003FFB
_EXTRC_OSC_CLKOUT                 00003FFF
gpasm-0.13.7 beta               servo.asm   5-19-2012  16:57:52          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EXTRC_OSC_NOCLKOUT               00003FFE
_HS_OSC                           00003FFA
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__12F629                          00000001
dc1                               00000020
dc2                               00000021
portCounter                       0000002A
portData                          0000002B
portOutTmp                        00000028
portSelect                        0000002C
sPauseI                           00000027
servo0I                           00000022
servo1I                           00000023
servo2I                           00000024
servo3I                           00000025
servoSelect                       00000026
tmp                               00000029
_portData                         0x3
_servo0Port                       0x0
_servo1Port                       0x1
_servo2Port                       0x2
_servo3Port                       0x4


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

00000000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00000080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
000000c0 : XXXXXXXXXXXX---- ---------------- ---------------- ----------------
00002000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used: 205


Errors   :       0
Warnings :       4 reported,       0 suppressed
Messages :       0 reported,       4 suppressed

